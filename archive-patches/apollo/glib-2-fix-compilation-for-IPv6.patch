diff --git a/configure.ac b/configure.ac
index 7114014..023db49 100644
--- a/configure.ac.orig	2013-07-30 00:07:26.000000000 +0200
+++ b/configure.ac	2013-08-23 01:42:58.563740244 +0200
@@ -1175,6 +1175,11 @@
               AC_DEFINE(HAVE_IP_MREQN,, [Define if we have struct ip_mreqn])],,
               [#include <netinet/in.h>])
 
+AC_ARG_ENABLE(ipv6,
+              [AS_HELP_STRING([--disable-ipv6],
+                              [Disable IPv6 support])],,
+              [AC_DEFINE(HAVE_IPV6, 1, Disable IPv6 support)])
+
 case $host in
   *-*-solaris* )
      AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1, Needed to get declarations for msg_control and msg_controllen on Solaris)
diff --git a/gio/ginetaddress.c b/gio/ginetaddress.c
index 0f67e4f..ed29be2 100644
--- a/gio/ginetaddress.c
+++ b/gio/ginetaddress.c
@@ -484,7 +484,13 @@ g_inet_address_new_loopback (GSocketFamily family)
       return g_inet_address_new_from_bytes (addr, family);
     }
   else
-    return g_inet_address_new_from_bytes (in6addr_loopback.s6_addr, family);
+    {
+#ifdef HAVE_IPV6
+      return g_inet_address_new_from_bytes (in6addr_loopback.s6_addr, family);
+#else
+      return NULL;
+#endif
+    }
 }
 
 /**
@@ -511,7 +517,13 @@ g_inet_address_new_any (GSocketFamily family)
       return g_inet_address_new_from_bytes (addr, family);
     }
   else
-    return g_inet_address_new_from_bytes (in6addr_any.s6_addr, family);
+    {
+#ifdef HAVE_IPV6
+      return g_inet_address_new_from_bytes (in6addr_any.s6_addr, family);
+#else
+      return NULL;
+#endif
+    }
 }
 

--- a/gio/gsocket.c.org	2013-08-23 00:17:23.545312672 +0200
+++ b/gio/gsocket.c	2013-08-23 00:23:33.654135248 +0200
@@ -1320,11 +1320,13 @@
       g_socket_get_option (socket, IPPROTO_IP, IP_TTL,
 			   &value, &error);
     }
+#ifdef HAVE_IPV6
   else if (socket->priv->family == G_SOCKET_FAMILY_IPV6)
     {
       g_socket_get_option (socket, IPPROTO_IPV6, IPV6_UNICAST_HOPS,
 			   &value, &error);
     }
+#endif
   else
     g_return_val_if_reached (0);
 
@@ -1361,6 +1363,7 @@
       g_socket_set_option (socket, IPPROTO_IP, IP_TTL,
 			   ttl, &error);
     }
+#ifdef HAVE_IPV6
   else if (socket->priv->family == G_SOCKET_FAMILY_IPV6)
     {
       g_socket_set_option (socket, IPPROTO_IP, IP_TTL,
@@ -1368,6 +1371,7 @@
       g_socket_set_option (socket, IPPROTO_IPV6, IPV6_UNICAST_HOPS,
 			   ttl, &error);
     }
+#endif
   else
     g_return_if_reached ();
 
@@ -1469,11 +1473,13 @@
       g_socket_get_option (socket, IPPROTO_IP, IP_MULTICAST_LOOP,
 			   &value, &error);
     }
+#ifdef HAVE_IPV6
   else if (socket->priv->family == G_SOCKET_FAMILY_IPV6)
     {
       g_socket_get_option (socket, IPPROTO_IPV6, IPV6_MULTICAST_LOOP,
 			   &value, &error);
     }
+#endif
   else
     g_return_val_if_reached (FALSE);
 
@@ -1514,6 +1520,7 @@
       g_socket_set_option (socket, IPPROTO_IP, IP_MULTICAST_LOOP,
 			   loopback, &error);
     }
+#ifdef HAVE_IPV6
   else if (socket->priv->family == G_SOCKET_FAMILY_IPV6)
     {
       g_socket_set_option (socket, IPPROTO_IP, IP_MULTICAST_LOOP,
@@ -1521,6 +1528,7 @@
       g_socket_set_option (socket, IPPROTO_IPV6, IPV6_MULTICAST_LOOP,
 			   loopback, &error);
     }
+#endif
   else
     g_return_if_reached ();
 
@@ -1558,11 +1566,13 @@
       g_socket_get_option (socket, IPPROTO_IP, IP_MULTICAST_TTL,
 			   &value, &error);
     }
+#ifdef HAVE_IPV6
   else if (socket->priv->family == G_SOCKET_FAMILY_IPV6)
     {
       g_socket_get_option (socket, IPPROTO_IPV6, IPV6_MULTICAST_HOPS,
 			   &value, &error);
     }
+#endif
   else
     g_return_val_if_reached (FALSE);
 
@@ -1600,6 +1610,7 @@
       g_socket_set_option (socket, IPPROTO_IP, IP_MULTICAST_TTL,
 			   ttl, &error);
     }
+#ifdef HAVE_IPV6
   else if (socket->priv->family == G_SOCKET_FAMILY_IPV6)
     {
       g_socket_set_option (socket, IPPROTO_IP, IP_MULTICAST_TTL,
@@ -1607,6 +1618,7 @@
       g_socket_set_option (socket, IPPROTO_IPV6, IPV6_MULTICAST_HOPS,
 			   ttl, &error);
     }
+#endif
   else
     g_return_if_reached ();
 
@@ -2050,6 +2062,7 @@
       result = setsockopt (socket->priv->fd, IPPROTO_IP, optname,
 			   &mc_req, sizeof (mc_req));
     }
+#ifdef HAVE_IPV6
   else if (g_inet_address_get_family (group) == G_SOCKET_FAMILY_IPV6)
     {
       struct ipv6_mreq mc_req_ipv6;
@@ -2067,6 +2080,7 @@
       result = setsockopt (socket->priv->fd, IPPROTO_IPV6, optname,
 			   &mc_req_ipv6, sizeof (mc_req_ipv6));
     }
+#endif
   else
     g_return_val_if_reached (FALSE);
 
@@ -2174,6 +2188,7 @@
     case G_SOCKET_FAMILY_IPV4:
       return TRUE;
 
+#ifdef HAVE_IPV6
     case G_SOCKET_FAMILY_IPV6:
 #if defined (IPPROTO_IPV6) && defined (IPV6_V6ONLY)
       {
@@ -2189,7 +2204,7 @@
 #else
       return FALSE;
 #endif
-
+#endif
     default:
       return FALSE;
     }
--- a/autogen.sh.org	2012-08-18 19:32:04.000000000 +0200
+++ b/autogen.sh	2013-08-23 02:02:24.641497907 +0200
@@ -33,4 +33,3 @@
 autoreconf --force --install --verbose || exit $?
 
 cd "$olddir"
-test -n "$NOCONFIGURE" || "$srcdir/configure" "$@"
