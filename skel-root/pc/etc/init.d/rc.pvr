#!/bin/sh
#@Title         PowerVR SGX DDK for Embedded Linux
#@Copyright     Copyright (c) Imagination Technologies Ltd. All Rights Reserved
#@License       Strictly Confidential.

# Auto-generated for apollo_531_linux from build: sgxddk_1.9.RC2@2139099
#

load_pvr()
{
		# Load the PVR Services module.
	#

	if ! /sbin/modprobe -q pvrsrvkm; then
		echo "Module pvrsrvkm failed to load. Retrying."
		if [ -z $depmod_has_been_run ]; then
			if [ -e /sbin/depmod ]; then
				echo "Running /sbin/depmod"
				/sbin/depmod && depmod_has_been_run=1
			fi
		fi
		if ! /sbin/modprobe -q pvrsrvkm; then return; fi
	fi

	# Delete the device for PVR services device and recreate with the
	# correct major number.
	#
	pvr_maj=`grep "pvrsrvkm$" /proc/devices | cut -b1,2,3`
	/bin/rm -f /dev/pvrsrvkm
	/bin/mknod /dev/pvrsrvkm c $pvr_maj 0
	/bin/chmod 666 /dev/pvrsrvkm

	# Run the PVR initialisation server
	if ! /usr/local/bin/pvrsrvctl --start --no-module; then return; fi

	# Load remaining modules.
	#

	if ! /sbin/modprobe -q pvrnxpdc $PVR_DISPLAY_PARAMS; then
		echo "Module pvrnxpdc failed to load. Retrying."
		if [ -z $depmod_has_been_run ]; then
			if [ -e /sbin/depmod ]; then
				echo "Running /sbin/depmod"
				/sbin/depmod && depmod_has_been_run=1
			fi
		fi
		if ! /sbin/modprobe -q pvrnxpdc $PVR_DISPLAY_PARAMS; then echo "Continuing to load PowerVR services"; pvrnxpdc_failed=1; fi
	fi

	if ! /sbin/modprobe -q pvrvssbc ; then
		echo "Module pvrvssbc failed to load. Retrying."
		if [ -z $depmod_has_been_run ]; then
			if [ -e /sbin/depmod ]; then
				echo "Running /sbin/depmod"
				/sbin/depmod && depmod_has_been_run=1
			fi
		fi
		if ! /sbin/modprobe -q pvrvssbc ; then echo "Continuing to load PowerVR services"; pvrvssbc_failed=1; fi
	fi

	# Delete the device for pvrvssbc and recreate with the
	# correct major number.
	#
	if [ -z $pvrvssbc_failed ]; then
		bcd_maj=`grep "pvrvssbc$" /proc/devices | cut -b1,2,3`
		/bin/rm -f /dev/pvrvssbc
		/bin/mknod /dev/pvrvssbc c $bcd_maj 0
		/bin/chmod 666 /dev/pvrvssbc
	fi

	echo "Loaded PowerVR consumer services."
	return 0;
}

unload_pvr()
{
	# Unload modules.  This won't pick up cases where a further module
	# has been added which has a dependency on one of these modules.
	#
	if rmmod pvrnxpdc; then :; else echo "Warning: Could not unload pvrnxpdc"; fi
	if rmmod pvrvssbc; then :; else echo "Warning: Could not unload pvrvssbc"; fi

	# Unload the PVR Services module.
	#
	if rmmod pvrsrvkm; then :; else return 1; fi


	echo "Unloaded PowerVR consumer services."
	return 0;
}

# Deal with the type of invocation we get.
#
case "$1" in
"start")
	load_pvr
	;;
stop)
	if ! unload_pvr; then
		echo "Couldn't unload modules" >&2;
	fi
	;;
reload|restart)
	if unload_pvr; then
		load_pvr
	else
		echo "Couldn't unload modules" >&2;
	fi
	;;
*)
	echo "$0: unknown argument $1." >&2;
	;;
esac
