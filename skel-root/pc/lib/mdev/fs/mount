#!/bin/sh

# based on script from http://gitorious.org/neutrino-hd/buildsystem-cs

. /lib/mdev/common/log


MOUNTBASE=/media
MOUNTPOINT="$MOUNTBASE/$MDEV"
ROOTDEV=$(readlink /dev/root)

# do not add or remove root device again...
[ "$ROOTDEV" = "$MDEV" ] && exit 0
if [ -e /tmp/.nomdevmount ]; then
	log_info "no action on $MDEV -- /tmp/.nomdevmount exists"
	exit 0
fi

create_symlinks() {
	DEVBASE=${MDEV:0:3} # first 3 characters
	PARTNUM=${MDEV:3}   # characters 4-
	read MODEL < /sys/block/$DEVBASE/device/model
	MODEL=${MODEL// /_} # replace ' ' with '_'
	OLDPWD=$PWD
	cd $MOUNTBASE
	if which blkid > /dev/null; then
		BLKID=$(blkid /dev/$MDEV)
		eval ${BLKID#*:}
	fi
	if [ -n "$LABEL" ]; then
		rm -f "$LABEL"
		ln -s $MDEV "$LABEL"
	fi
	if [ -n "$UUID" ]; then
		LINK="${TYPE}${TYPE:+-}${UUID}"
		rm -f "${LINK}"
		ln -s $MDEV "${LINK}"
	fi
	if [ -n "$MODEL" ]; then
		LINK="${MODEL}${PARTNUM:+-}${PARTNUM}"
		rm -f "${LINK}"
		ln -s $MDEV "${LINK}"
	fi
	cd $OLDPWD
}

remove_symlinks() {
	OLDPWD=$PWD
	cd $MOUNTBASE
	for i in *; do
		[ -L "$i" ] || continue
		TARGET=$(readlink "$i")
		if [ "$TARGET" = "$MDEV" ]; then
			rm "$i"
		fi
	done
	cd $OLDPWD
}

case "$ACTION" in
	add|"")
		if [ ${#MDEV} = 3 ]; then # sda, sdb, sdc => whole drive
			PARTS=$(sed -n "/ ${MDEV}[0-9]$/{s/ *[0-9]* *[0-9]* * [0-9]* //;p}" /proc/partitions)
			if [ -n "$PARTS" ]; then
				log_info "drive has partitions $PARTS, not trying to mount $MDEV"
				exit 0
			fi
		fi
		if grep -q "/dev/$MDEV " /proc/mounts; then
			log_info "/dev/$MDEV already mounted - not mounting again"
			exit 0
		fi
		log_info "mounting /dev/$MDEV to $MOUNTPOINT"
		NTFSMOUNT=$(which ntfs-3g)
		RET2=$?
		EXFATMOUNT=$(which mount.exfat-fuse)
		RET3=$?
		# remove old mountpoint symlinks we might have for this device
		rm -f $MOUNTPOINT
		mkdir -p $MOUNTPOINT
		for i in 1 2 3 4 5; do # retry, my freeagent drive sometimes needs more time
			# log_info "mounting /dev/$MDEV to $MOUNTPOINT try $i"
			OUT1=$(mount -t auto /dev/$MDEV $MOUNTPOINT 2>&1 >/dev/null)
			RET1=$?
			[ $RET1 = 0 ] && break
			sleep 1
		done
		if [ "$RET1" != "0" -a -n "$NTFSMOUNT" ]; then
			# failed,retry with ntfs-3g
			for i in 1 2; do # retry only twice, waited already 5 seconds
				$NTFSMOUNT /dev/$MDEV $MOUNTPOINT 2>&1 >/dev/null
				RET2=$?
				[ $RET2 = 0 ] && break
				sleep 1
			done
		fi
		if [ "$RET2" != "0" -a -n "$EXFATMOUNT" ]; then
			# failed,retry with mount.exfat-fuse
			modprobe fuse
			for i in 1 2; do # retry only twice, waited already 5 seconds
				$EXFATMOUNT /dev/$MDEV $MOUNTPOINT 2>&1 >/dev/null
				RET3=$?
				if [ $RET3 = 0 ]; then
					EXFATLABEL=$(which exfatlabel)
					if [ -n "$EXFATLABEL" ]; then
						LABEL=$($EXFATLABEL /dev/$MDEV 2>/dev/null)
					fi
					break
				fi
				sleep 1
			done
		fi
		if [ "$RET1" = "0" -o "$RET2" = "0" -o "$RET3" = "0" ]; then
			create_symlinks
		else
			log_warn "mount   /dev/$MDEV $MOUNTPOINT failed with $RET1"
			log_warn "        $OUT1"
			if [ -n "$NTFSMOUNT" ]; then
				log_warn "ntfs-3g /dev/$MDEV $MOUNTPOINT failed with $RET2"
			fi
			if [ -n "$EXFATMOUNT" ]; then
				log_warn "mount.exfat-fuse /dev/$MDEV $MOUNTPOINT failed with $RET3"
			fi
			rmdir $MOUNTPOINT
		fi
		if [ -x /bin/mdev_helper ]; then
			/bin/mdev_helper
		fi
		;;
	remove)
		log_info "unmounting /dev/$MDEV"
		grep -q "^/dev/$MDEV " /proc/mounts || exit 0 # not mounted...
		umount -lf /dev/$MDEV
		RET=$?
		if [ $RET = 0 ]; then
			rmdir $MOUNTPOINT
			remove_symlinks
		else
			log_warn "umount /dev/$MDEV failed with $RET"
		fi
		if [ -x /bin/mdev_helper ]; then
			/bin/mdev_helper
		fi
		;;
esac
